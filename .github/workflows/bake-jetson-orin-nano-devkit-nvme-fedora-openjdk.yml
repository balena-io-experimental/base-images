name: bake-jetson-orin-nano-devkit-nvme-fedora-openjdk
'on':
  workflow_run:
    workflows:
      - bake-jetson-orin-nano-devkit-nvme-fedora
    types:
      - completed
  workflow_dispatch:
    inputs:
      no-push:
        description: Do not push to DockerHub
        required: false
        type: boolean
        default: false
concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true
env:
  LIBRARY: library/jetson-orin-nano-devkit-nvme-fedora-openjdk.json
jobs:
  prepare:
    name: Prepare matrix
    runs-on: ubuntu-latest
    outputs:
      bake-targets: ${{ steps.bake-targets.outputs.matrix }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Set matrix
        id: bake-targets
        run: |
          set -x
          targets="$(jq -cr '.group.default.targets' $LIBRARY)"
          echo "matrix=$targets" >> $GITHUB_OUTPUT
  bake:
    name: Bake images
    runs-on: ubuntu-latest
    needs:
      - prepare
    strategy:
      fail-fast: false
      matrix:
        target: ${{ fromJSON(needs.prepare.outputs.bake-targets) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Setup QEMU
        uses: docker/setup-qemu-action@2b82ce82d56a2a04d2637cd93a637ae1b359c0a7
        with:
          platforms: all
          image: tonistiigi/binfmt:qemu-v6.2.0
      - name: Setup buildx
        uses: docker/setup-buildx-action@885d1462b80bc1c1c7f0b00334ad271f09369c55
        with:
          driver-opts: network=host
          install: true
      - name: Login to DockerHub
        uses: docker/login-action@v2
        if: ${{ inputs.no-push != true && github.event_name != 'pull_request' }}
        with:
          registry: docker.io
          username: ${{ secrets.BALENAIMAGES_USER }}
          password: ${{ secrets.BALENAIMAGES_TOKEN }}
      - name: Docker bake
        id: docker_bake
        uses: docker/bake-action@f32f8b8d70bc284af19f8148dd14ad1d2fbc6c28
        with:
          workdir: balena-base-images
          files: ${{ github.workspace }}/${{ env.LIBRARY }}
          targets: ${{ matrix.target }}
          push: ${{ inputs.no-push != true && github.event_name != 'pull_request' }}
          provenance: false
