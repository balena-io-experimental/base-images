name: "Autogenerate"
description: "Generate and publish libraries"
inputs:
  json:
    description: "JSON stringified object containing all the inputs from the calling workflow"
    required: true
  secrets:
    description: "JSON stringified object containing all the secrets from the calling workflow"
    required: true
  variables:
    description: "JSON stringified object containing all the variables from the calling workflow"
    required: true
runs:
  using: "composite"
  steps:
    - name: Check which files were modified
      shell: bash
      id: should_publish
      env:
        GH_PAGER: "cat"
        GH_PROMPT_DISABLED: "true"
        GH_REPO: "${{ github.repository }}"
        GH_TOKEN: "${{ fromJSON(inputs.secrets).GITHUB_TOKEN }}"
      run: |
        if [[ $(gh pr diff ${{ github.event.pull_request.number }} --name-only) =~ scripts\/ ]]
        then
          echo "result=true" >> $GITHUB_OUTPUT 
        else
          # TODO: set back to false to avoid always building
          echo "result=true" >> $GITHUB_OUTPUT
        fi

    # https://github.com/actions/setup-node
    - name: Setup Node.js 18.x
      if: steps.should_publish.outputs.result == 'true'
      uses: actions/setup-node@5e21ff4d9bc1a8cf6de233a3057d20ec6b3fb69d # v3.8.1
      with:
        node-version: 18.x

    - name: Install dependencies
      if: steps.should_publish.outputs.result == 'true'
      shell: bash
      run: npm ci

    - name: Generate dockerfiles
      if: steps.should_publish.outputs.result == 'true'
      shell: bash
      run: npm run all >/dev/null

    - name: Generate docs
      if: steps.should_publish.outputs.result == 'true'
      shell: bash
      run: npm run all-dockerhub >/dev/null

    - name: Generate bakefiles
      if: steps.should_publish.outputs.result == 'true'
      shell: bash
      run: npm run all-lib >/dev/null

    - name: Generate workflows
      if: steps.should_publish.outputs.result == 'true'
      shell: bash
      run: npm run all-workflows >/dev/null

    # We need a token with contents:write and workflows:write permissions
    # so the automatic GITHUB_TOKEN won't work
    # https://github.com/tibdex/github-app-token
    - name: Generate GitHub App installation token
      if: steps.should_publish.outputs.result == 'true'
      uses: tibdex/github-app-token@3beb63f4bd073e61482598c45c71c1019b59b73a # v2.1.0
      id: gh_app_token
      with:
        app_id: "400994"
        installation_retrieval_mode: organization
        installation_retrieval_payload: ${{ github.event.repository.owner.login }}
        private_key: ${{ fromJSON(inputs.secrets).BALENALIB_BOT_PRIVATE_KEY }}
        repositories: >
          ["${{ github.event.repository.name }}"]

    - name: Commit and push
      if: steps.should_publish.outputs.result == 'true'
      shell: bash
      env:
        # get the user id of the GitHub App
        # gh api /users/balenalib-workflows%5Bbot%5D
        GIT_AUTHOR_NAME: balenalib-workflows[bot]
        GIT_AUTHOR_EMAIL: 146760701+balenalib-workflows[bot]@users.noreply.github.com
        GIT_COMMITTER_NAME: balenalib-workflows[bot]
        GIT_COMMITTER_EMAIL: 146760701+balenalib-workflows[bot]@users.noreply.github.com
      run: |
        if [ -z "$(git status --porcelain)" ]
        then
          echo "No changes to commit"
          exit 0
        fi
        git config --local --unset-all http.https://github.com/.extraheader
        git add -A balena-base-images library .github/workflows
        git commit -m "Autogenerated libraries" -m "[skip ci]"
        git remote set-url origin https://x-access-token:${{ steps.gh_app_token.outputs.token }}@github.com/$GITHUB_REPOSITORY
        git push origin HEAD:${{ github.head_ref }}
